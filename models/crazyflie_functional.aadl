package Crazyflie_functional

-- This package models the abstract functional chain of the Crazyflie,
-- from https://wiki.bitcraze.io/doc:crazyflie:dev:fimware:sensor_to_control

public

  abstract Accelero
  features
    Accelero_Out : out data port;

  flows
    f1 : flow source Accelero_Out {latency => 100 us .. 300 us; };		

  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Accelero;

  abstract Gyro
  features
    Gyro_Out : out data port;
    
  flows
    f1 : flow source Gyro_Out {latency => 100 us .. 300 us; };		
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Gyro;

  abstract Magneto
  features
    Magneto_Out : out data port;
    
 flows
   f1 : flow source Magneto_Out {latency => 100 us .. 300 us; };		
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Magneto;

  abstract Sensor_Fusion
  features
    Accelero_In : in data port;
    Gyro_In     : in data port;
    Magneto_In  : in data port;
    Data_F_Out  : out data port; -- Fusioned data
    
    -- ADAM
    -- Q8 Add new sensor readings to fusion
    PMW3901_In : in data port;
    VL53L0x_In : in data port;
    
  flows
    f1 : flow path Accelero_In -> Data_F_Out {latency => 200 us .. 400 us; };	
    f2 : flow path Gyro_In -> Data_F_Out {latency => 200 us .. 400 us; };
    
    -- ADAM flow path fom magneto_in to data
    -- Q4
    f3 : flow path Magneto_In -> Data_F_Out {latency => 200 us .. 400 us; };
    
    -- Q8
    -- ADAM Add sensors
    f4 : flow path PMW3901_In -> Data_F_Out {latency => 200 us .. 400 us; };
    f5 : flow path VL53L0x_In -> Data_F_Out {latency => 200 us .. 400 us; };
    
    	   
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end Sensor_Fusion;

  abstract Controller
  features
    Data_F_In : in data port;
    Gyro_In   : in data port;
    Motor_Out : out data port;
    TC : in data port;
  flows
  	f1 : flow path Data_F_In -> Motor_Out {latency => 200 us .. 400 us; };	
    f2 : flow path Gyro_In -> Motor_Out {latency => 200 us .. 400 us; };	
    f3 : flow path TC -> Motor_Out {latency => 200 us .. 400 us; };	
    
  properties
    Dispatch_Protocol => Periodic;
    Period => 2 ms; --  500 Hz
  end Controller;

  abstract Motors
  features
    Motor_In : in data port;
    
  flows
    f1 : flow sink Motor_In {latency => 100 us .. 500 us; };
    			
  properties
--    Dispatch_Protocol => Aperiodic;
    Dispatch_Protocol => Periodic;
    Period => 2ms;
  end Motors;

  abstract Pilot
  features
	Order : out data port;
  end Pilot;

  system Crazyflie_Functional_Chain
  end Crazyflie_Functional_Chain;

  system implementation Crazyflie_Functional_Chain.impl
  subcomponents
    --  Sensing
    Acc        : abstract Accelero;
    Gyro       : abstract Gyro;
    Magneto    : abstract Magneto;

    Pilot      : abstract Pilot;

    --  Computing
    Fusion     : abstract Sensor_Fusion;
    Controller : abstract Controller;

    --  Acting
    Motors : abstract Motors;

  connections
    C1 : port Acc.Accelero_Out     -> Fusion.Accelero_In;
    C2 : port Gyro.Gyro_Out        -> Fusion.Gyro_In;
    C3 : port Magneto.Magneto_Out  -> Fusion.Magneto_In;

    C4 : port Gyro.Gyro_Out        -> Controller.Gyro_In;
    C5 : port Fusion.Data_F_Out    -> Controller.Data_F_In;

    C6 : port Controller.Motor_Out -> Motors.Motor_In;

    C7 : port Pilot.Order -> Controller.TC;

  flows
  	f_etef1 : end to end flow Gyro.f1 -> C2 -> Fusion.f2 -> C5 -> Controller.f1 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};
  	f_etef1bis : end to end flow Gyro.f1 -> C4 -> Controller.f2 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};
    f_etef2 : end to end flow Acc.f1 -> C1 -> Fusion.f1 -> C5 -> Controller.f1 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};
    
    -- ADAM: Flow from magneto through sensor fusion to controller to motor
    f_etef3 : end to end flow Magneto.f1 -> C3 -> Fusion.f3 -> C5 -> Controller.f1 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};

    -- ADAM: Flow from pilot to controller to motor
    f_etef4 : end to end flow Pilot -> C7 -> Controller.f3 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};

    
  end Crazyflie_Functional_Chain.impl;
  
  
  -- ADAM:
  -- Q8 START
  -- We define he abstract sensor components for he FlowDeck and hen we exend the functional impl wih a v2
  -- The v2 will be identical, but also include the 2 new sensor reaings and pass them along like the previous 3 values
  
   -- Q8 - We create this sensor reading from the FlowDeck just like the other sensors 
  abstract VL53L0x
  features
    VL53L0x_Out : out data port;
  flows
    f1 : flow source VL53L0x_Out {latency => 100 us .. 300 us; };		
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end VL53L0x;
  
  -- Q8 - We create this sensor reading from the FlowDeck just like the other sensors
  abstract PMW3901
  	  features
    PMW3901_Out : out data port;
  flows
    f1 : flow source PMW3901_Out {latency => 100 us .. 300 us; };		
  properties
    Dispatch_Protocol => Periodic;
    Period => 4 ms; --  250 Hz
  end PMW3901;
  
  system implementation Crazyflie_Functional_Chain.impl_v2 extends Crazyflie_Functional_Chain.impl
  subcomponents
    PMW3901 : abstract PMW3901;
    VL53L0x : abstract VL53L0x;

  connections
    C8 : port PMW3901.PMW3901_Out        -> Fusion.PMW3901_In;
    C9 : port VL53L0x.VL53L0x_Out  -> Fusion.VL53L0x_In;
  flows
    f_etef5 : end to end flow PMW3901.f1 -> C8 -> Fusion.f4 -> C5 -> Controller.f1 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};
    f_etef6 : end to end flow VL53L0x.f1 -> C9 -> Fusion.f5 -> C5 -> Controller.f1 -> C6 -> Motors.f1 { latency => 0 ms .. 2 ms;};
    
 end Crazyflie_Functional_Chain.impl_v2;
 -- Q8 END
 -- ADAM:

end Crazyflie_functional;